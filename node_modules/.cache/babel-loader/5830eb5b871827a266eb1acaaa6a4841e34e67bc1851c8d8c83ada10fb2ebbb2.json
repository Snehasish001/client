{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT AREA\\\\updated project\\\\college-main\\\\college-main\\\\front\\\\src\\\\components\\\\layout\\\\BikeDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getData } from '../../Api';\nimport '../styles/BrandDetails.css';\nimport MotorcycleCard from './MotorcycleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrandDetails = () => {\n  _s();\n  const {\n    brandId\n  } = useParams();\n  const [bikes, setBikes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Brand name mapping for API query\n  const brandMapping = {\n    'hero': 'Hero MotoCorp',\n    'royal-enfield': 'Royal Enfield',\n    'yamaha': 'Yamaha',\n    'ktm': 'KTM',\n    'bajaj': 'Bajaj',\n    'ducati': 'Ducati',\n    'bmw': 'BMW',\n    'kawasaki': 'Kawasaki'\n  };\n  useEffect(() => {\n    getData('api/get-bike/').then(data => {\n      // Filter bikes by exact brand name match\n      const brandBikes = data.filter(bike => bike.brand === brandMapping[brandId]);\n      setBikes(brandBikes);\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setError(err.message);\n      setLoading(false);\n    });\n  }, [brandId]);\n  const brandInfo = {\n    yamaha: {\n      name: \"Yamaha\",\n      description: \"Yamaha Motor Company is a Japanese manufacturer known for producing motorcycles, marine products, and other motorized vehicles.\"\n    },\n    hero: {\n      name: \"Hero\",\n      description: \"Hero MotoCorp is an Indian multinational motorcycle and scooter manufacturer headquartered in New Delhi, India.\"\n    },\n    ktm: {\n      name: \"KTM\",\n      description: \"KTM AG is an Austrian motorcycle and sports car manufacturer known for their off-road motorcycles and high-performance street bikes.\"\n    },\n    'royal-enfield': {\n      name: \"Royal Enfield\",\n      description: \"Royal Enfield is an Indian multinational motorcycle manufacturing company, known for its classic-styled motorcycles.\"\n    },\n    bajaj: {\n      name: \"Bajaj\",\n      description: \"Bajaj Auto is an Indian multinational manufacturer of motorcycles, three-wheelers and quadricycles.\"\n    },\n    ducati: {\n      name: \"Ducati\",\n      description: \"Ducati Motor Holding S.p.A. is an Italian motorcycle manufacturing company known for high-performance motorcycles.\"\n    },\n    bmw: {\n      name: \"BMW\",\n      description: \"BMW Motorrad is the motorcycle division of BMW, known for producing premium motorcycles with advanced technology.\"\n    },\n    kawasaki: {\n      name: \"Kawasaki\",\n      description: \"Kawasaki Heavy Industries Motorcycle & Engine is a Japanese manufacturer of motorcycles, known for their powerful sports bikes.\"\n    }\n  };\n  if (!brandInfo[brandId]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand-not-found\",\n      children: \"Brand not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading bikes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brand-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: brandInfo[brandId].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"brand-description\",\n        children: brandInfo[brandId].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bikes-grid\",\n      children: bikes.map(bike => /*#__PURE__*/_jsxDEV(MotorcycleCard, {\n        id: bike.id,\n        image: bike.image1,\n        name: bike.name,\n        year: bike.year,\n        category: bike.category,\n        displacement: bike.displacement,\n        description: bike.description,\n        price: bike.price\n      }, bike.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), bikes.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-bikes\",\n      children: [\"No bikes found for \", brandInfo[brandId].name, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(BrandDetails, \"+nk1UwiyY2EcuJGEOfWB/sCOPqc=\", false, function () {\n  return [useParams];\n});\n_c = BrandDetails;\nexport default BrandDetails;\nvar _c;\n$RefreshReg$(_c, \"BrandDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getData","MotorcycleCard","jsxDEV","_jsxDEV","BrandDetails","_s","brandId","bikes","setBikes","loading","setLoading","error","setError","brandMapping","then","data","brandBikes","filter","bike","brand","catch","err","console","message","brandInfo","yamaha","name","description","hero","ktm","bajaj","ducati","bmw","kawasaki","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","image","image1","year","category","displacement","price","length","_c","$RefreshReg$"],"sources":["E:/PROJECT AREA/updated project/college-main/college-main/front/src/components/layout/BikeDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getData } from '../../Api';\nimport '../styles/BrandDetails.css';\nimport MotorcycleCard from './MotorcycleCard';\n\nconst BrandDetails = () => {\n  const { brandId } = useParams();\n  const [bikes, setBikes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Brand name mapping for API query\n  const brandMapping = {\n    'hero': 'Hero MotoCorp',\n    'royal-enfield': 'Royal Enfield',\n    'yamaha': 'Yamaha',\n    'ktm': 'KTM',\n    'bajaj': 'Bajaj',\n    'ducati': 'Ducati',\n    'bmw': 'BMW',\n    'kawasaki': 'Kawasaki'\n  };\n\n  useEffect(() => {\n    getData('api/get-bike/')\n      .then(data => {\n        // Filter bikes by exact brand name match\n        const brandBikes = data.filter(bike => \n          bike.brand === brandMapping[brandId]\n        );\n        setBikes(brandBikes);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(err);\n        setError(err.message);\n        setLoading(false);\n      });\n  }, [brandId]);\n\n  const brandInfo = {\n    yamaha: {\n      name: \"Yamaha\",\n      description: \"Yamaha Motor Company is a Japanese manufacturer known for producing motorcycles, marine products, and other motorized vehicles.\"\n    },\n    hero: {\n      name: \"Hero\",\n      description: \"Hero MotoCorp is an Indian multinational motorcycle and scooter manufacturer headquartered in New Delhi, India.\"\n    },\n    ktm: {\n      name: \"KTM\",\n      description: \"KTM AG is an Austrian motorcycle and sports car manufacturer known for their off-road motorcycles and high-performance street bikes.\"\n    },\n    'royal-enfield': {\n      name: \"Royal Enfield\",\n      description: \"Royal Enfield is an Indian multinational motorcycle manufacturing company, known for its classic-styled motorcycles.\"\n    },\n    bajaj: {\n      name: \"Bajaj\",\n      description: \"Bajaj Auto is an Indian multinational manufacturer of motorcycles, three-wheelers and quadricycles.\"\n    },\n    ducati: {\n      name: \"Ducati\",\n      description: \"Ducati Motor Holding S.p.A. is an Italian motorcycle manufacturing company known for high-performance motorcycles.\"\n    },\n    bmw: {\n      name: \"BMW\",\n      description: \"BMW Motorrad is the motorcycle division of BMW, known for producing premium motorcycles with advanced technology.\"\n    },\n    kawasaki: {\n      name: \"Kawasaki\",\n      description: \"Kawasaki Heavy Industries Motorcycle & Engine is a Japanese manufacturer of motorcycles, known for their powerful sports bikes.\"\n    }\n  };\n\n  if (!brandInfo[brandId]) {\n    return <div className=\"brand-not-found\">Brand not found</div>;\n  }\n\n  if (loading) return <div className=\"loading\">Loading bikes...</div>;\n  if (error) return <div className=\"error\">Error: {error}</div>;\n\n  return (\n    <div className=\"brand-details-container\">\n      <div className=\"brand-header\">\n        <h1>{brandInfo[brandId].name}</h1>\n        <p className=\"brand-description\">{brandInfo[brandId].description}</p>\n      </div>\n\n      <div className=\"bikes-grid\">\n        {bikes.map(bike => (\n          <MotorcycleCard\n            key={bike.id}\n            id={bike.id}\n            image={bike.image1}\n            name={bike.name}\n            year={bike.year}\n            category={bike.category}\n            displacement={bike.displacement}\n            description={bike.description}\n            price={bike.price}\n          />\n        ))}\n      </div>\n\n      {bikes.length === 0 && (\n        <div className=\"no-bikes\">No bikes found for {brandInfo[brandId].name}.</div>\n      )}\n    </div>\n  );\n};\n\nexport default BrandDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,4BAA4B;AACnC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,YAAY,GAAG;IACnB,MAAM,EAAE,eAAe;IACvB,eAAe,EAAE,eAAe;IAChC,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,OAAO;IAChB,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAE,KAAK;IACZ,UAAU,EAAE;EACd,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdE,OAAO,CAAC,eAAe,CAAC,CACrBc,IAAI,CAACC,IAAI,IAAI;MACZ;MACA,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAM,CAACC,IAAI,IACjCA,IAAI,CAACC,KAAK,KAAKN,YAAY,CAACP,OAAO,CACrC,CAAC;MACDE,QAAQ,CAACQ,UAAU,CAAC;MACpBN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDU,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACX,KAAK,CAACU,GAAG,CAAC;MAClBT,QAAQ,CAACS,GAAG,CAACE,OAAO,CAAC;MACrBb,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,MAAMkB,SAAS,GAAG;IAChBC,MAAM,EAAE;MACNC,IAAI,EAAE,QAAQ;MACdC,WAAW,EAAE;IACf,CAAC;IACDC,IAAI,EAAE;MACJF,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE;IACf,CAAC;IACDE,GAAG,EAAE;MACHH,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE;IACf,CAAC;IACD,eAAe,EAAE;MACfD,IAAI,EAAE,eAAe;MACrBC,WAAW,EAAE;IACf,CAAC;IACDG,KAAK,EAAE;MACLJ,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE;IACf,CAAC;IACDI,MAAM,EAAE;MACNL,IAAI,EAAE,QAAQ;MACdC,WAAW,EAAE;IACf,CAAC;IACDK,GAAG,EAAE;MACHN,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE;IACf,CAAC;IACDM,QAAQ,EAAE;MACRP,IAAI,EAAE,UAAU;MAChBC,WAAW,EAAE;IACf;EACF,CAAC;EAED,IAAI,CAACH,SAAS,CAAClB,OAAO,CAAC,EAAE;IACvB,oBAAOH,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/D;EAEA,IAAI9B,OAAO,EAAE,oBAAON,OAAA;IAAK+B,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnE,IAAI5B,KAAK,EAAE,oBAAOR,OAAA;IAAK+B,SAAS,EAAC,OAAO;IAAAC,QAAA,GAAC,SAAO,EAACxB,KAAK;EAAA;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE7D,oBACEpC,OAAA;IAAK+B,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtChC,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhC,OAAA;QAAAgC,QAAA,EAAKX,SAAS,CAAClB,OAAO,CAAC,CAACoB;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClCpC,OAAA;QAAG+B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAEX,SAAS,CAAClB,OAAO,CAAC,CAACqB;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eAENpC,OAAA;MAAK+B,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxB5B,KAAK,CAACiC,GAAG,CAACtB,IAAI,iBACbf,OAAA,CAACF,cAAc;QAEbwC,EAAE,EAAEvB,IAAI,CAACuB,EAAG;QACZC,KAAK,EAAExB,IAAI,CAACyB,MAAO;QACnBjB,IAAI,EAAER,IAAI,CAACQ,IAAK;QAChBkB,IAAI,EAAE1B,IAAI,CAAC0B,IAAK;QAChBC,QAAQ,EAAE3B,IAAI,CAAC2B,QAAS;QACxBC,YAAY,EAAE5B,IAAI,CAAC4B,YAAa;QAChCnB,WAAW,EAAET,IAAI,CAACS,WAAY;QAC9BoB,KAAK,EAAE7B,IAAI,CAAC6B;MAAM,GARb7B,IAAI,CAACuB,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELhC,KAAK,CAACyC,MAAM,KAAK,CAAC,iBACjB7C,OAAA;MAAK+B,SAAS,EAAC,UAAU;MAAAC,QAAA,GAAC,qBAAmB,EAACX,SAAS,CAAClB,OAAO,CAAC,CAACoB,IAAI,EAAC,GAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAC7E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CAzGID,YAAY;EAAA,QACIL,SAAS;AAAA;AAAAkD,EAAA,GADzB7C,YAAY;AA2GlB,eAAeA,YAAY;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}