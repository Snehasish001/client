{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT AREA\\\\updated project\\\\college-main\\\\college-main\\\\front\\\\src\\\\components\\\\layout\\\\BrandDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getData } from '../../Api';\nimport '../styles/BrandDetails.css';\nimport '../styles/loading.css'; // Loading animation styles import\nimport MotorcycleCard from './MotorcycleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrandDetails = () => {\n  _s();\n  const {\n    brandId\n  } = useParams();\n  const [bikes, setBikes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Brand name mapping for API query\n  const brandMapping = {\n    hero: 'Hero MotoCorp',\n    'royal-enfield': 'Royal Enfield',\n    yamaha: 'Yamaha',\n    ktm: 'KTM',\n    bajaj: 'Bajaj',\n    ducati: 'Ducati',\n    bmw: 'BMW',\n    kawasaki: 'Kawasaki'\n  };\n  useEffect(() => {\n    getData('api/get-bike/').then(data => {\n      const brandBikes = data.filter(bike => bike.brand === brandMapping[brandId]);\n      setBikes(brandBikes);\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setError(err.message);\n      setLoading(false);\n    });\n  }, [brandId]);\n  const brandInfo = {\n    yamaha: {\n      name: 'Yamaha',\n      description: 'Yamaha Motor Company is a Japanese manufacturer known for producing motorcycles, marine products, and other motorized vehicles.'\n    },\n    hero: {\n      name: 'Hero',\n      description: 'Hero MotoCorp is an Indian multinational motorcycle and scooter manufacturer headquartered in New Delhi, India.'\n    },\n    ktm: {\n      name: 'KTM',\n      description: 'KTM AG is an Austrian motorcycle and sports car manufacturer known for their off-road motorcycles and high-performance street bikes.'\n    },\n    'royal-enfield': {\n      name: 'Royal Enfield',\n      description: 'Royal Enfield is an Indian multinational motorcycle manufacturing company, known for its classic-styled motorcycles.'\n    },\n    bajaj: {\n      name: 'Bajaj',\n      description: 'Bajaj Auto is an Indian multinational manufacturer of motorcycles, three-wheelers and quadricycles.'\n    },\n    ducati: {\n      name: 'Ducati',\n      description: 'Ducati Motor Holding S.p.A. is an Italian motorcycle manufacturing company known for high-performance motorcycles.'\n    },\n    bmw: {\n      name: 'BMW',\n      description: 'BMW Motorrad is the motorcycle division of BMW, known for producing premium motorcycles with advanced technology.'\n    },\n    kawasaki: {\n      name: 'Kawasaki',\n      description: 'Kawasaki Heavy Industries Motorcycle & Engine is a Japanese manufacturer of motorcycles, known for their powerful sports bikes.'\n    }\n  };\n  if (!brandInfo[brandId]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand-not-found\",\n      children: \"Brand not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Bikes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brand-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: brandInfo[brandId].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"brand-description\",\n        children: brandInfo[brandId].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bikes-grid\",\n      children: bikes.map(bike => /*#__PURE__*/_jsxDEV(MotorcycleCard, {\n        id: bike.id,\n        image: bike.image1,\n        name: bike.name,\n        year: bike.year,\n        category: bike.category,\n        displacement: bike.displacement,\n        description: bike.about || bike.description || 'No description.',\n        price: bike.price\n      }, bike.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), bikes.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-bikes\",\n      children: [\"No bikes found for \", brandInfo[brandId].name, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(BrandDetails, \"+nk1UwiyY2EcuJGEOfWB/sCOPqc=\", false, function () {\n  return [useParams];\n});\n_c = BrandDetails;\nexport default BrandDetails;\nvar _c;\n$RefreshReg$(_c, \"BrandDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getData","MotorcycleCard","jsxDEV","_jsxDEV","BrandDetails","_s","brandId","bikes","setBikes","loading","setLoading","error","setError","brandMapping","hero","yamaha","ktm","bajaj","ducati","bmw","kawasaki","then","data","brandBikes","filter","bike","brand","catch","err","console","message","brandInfo","name","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","image","image1","year","category","displacement","about","price","length","_c","$RefreshReg$"],"sources":["E:/PROJECT AREA/updated project/college-main/college-main/front/src/components/layout/BrandDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getData } from '../../Api';\r\nimport '../styles/BrandDetails.css';\r\nimport '../styles/loading.css';  // Loading animation styles import\r\nimport MotorcycleCard from './MotorcycleCard';\r\n\r\nconst BrandDetails = () => {\r\n  const { brandId } = useParams();\r\n  const [bikes, setBikes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Brand name mapping for API query\r\n  const brandMapping = {\r\n    hero: 'Hero MotoCorp',\r\n    'royal-enfield': 'Royal Enfield',\r\n    yamaha: 'Yamaha',\r\n    ktm: 'KTM',\r\n    bajaj: 'Bajaj',\r\n    ducati: 'Ducati',\r\n    bmw: 'BMW',\r\n    kawasaki: 'Kawasaki',\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData('api/get-bike/')\r\n      .then(data => {\r\n        const brandBikes = data.filter(bike => bike.brand === brandMapping[brandId]);\r\n        setBikes(brandBikes);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  }, [brandId]);\r\n\r\n  const brandInfo = {\r\n    yamaha: {\r\n      name: 'Yamaha',\r\n      description:\r\n        'Yamaha Motor Company is a Japanese manufacturer known for producing motorcycles, marine products, and other motorized vehicles.',\r\n    },\r\n    hero: {\r\n      name: 'Hero',\r\n      description:\r\n        'Hero MotoCorp is an Indian multinational motorcycle and scooter manufacturer headquartered in New Delhi, India.',\r\n    },\r\n    ktm: {\r\n      name: 'KTM',\r\n      description:\r\n        'KTM AG is an Austrian motorcycle and sports car manufacturer known for their off-road motorcycles and high-performance street bikes.',\r\n    },\r\n    'royal-enfield': {\r\n      name: 'Royal Enfield',\r\n      description:\r\n        'Royal Enfield is an Indian multinational motorcycle manufacturing company, known for its classic-styled motorcycles.',\r\n    },\r\n    bajaj: {\r\n      name: 'Bajaj',\r\n      description:\r\n        'Bajaj Auto is an Indian multinational manufacturer of motorcycles, three-wheelers and quadricycles.',\r\n    },\r\n    ducati: {\r\n      name: 'Ducati',\r\n      description:\r\n        'Ducati Motor Holding S.p.A. is an Italian motorcycle manufacturing company known for high-performance motorcycles.',\r\n    },\r\n    bmw: {\r\n      name: 'BMW',\r\n      description:\r\n        'BMW Motorrad is the motorcycle division of BMW, known for producing premium motorcycles with advanced technology.',\r\n    },\r\n    kawasaki: {\r\n      name: 'Kawasaki',\r\n      description:\r\n        'Kawasaki Heavy Industries Motorcycle & Engine is a Japanese manufacturer of motorcycles, known for their powerful sports bikes.',\r\n    },\r\n  };\r\n\r\n  if (!brandInfo[brandId]) {\r\n    return <div className=\"brand-not-found\">Brand not found</div>;\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n        <p>Loading Bikes</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"brand-details-container\">\r\n      <div className=\"brand-header\">\r\n        <h1>{brandInfo[brandId].name}</h1>\r\n        <p className=\"brand-description\">{brandInfo[brandId].description}</p>\r\n      </div>\r\n\r\n      <div className=\"bikes-grid\">\r\n        {bikes.map(bike => (\r\n          <MotorcycleCard\r\n            key={bike.id}\r\n            id={bike.id}\r\n            image={bike.image1}\r\n            name={bike.name}\r\n            year={bike.year}\r\n            category={bike.category}\r\n            displacement={bike.displacement}\r\n            description={bike.about || bike.description || 'No description.'}\r\n            price={bike.price}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {bikes.length === 0 && (\r\n        <div className=\"no-bikes\">No bikes found for {brandInfo[brandId].name}.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}