{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT AREA\\\\updated project\\\\college-main\\\\college-main\\\\front\\\\src\\\\components\\\\layout\\\\BrandDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MotorcycleCard from './MotorcycleCard';\nimport { getData } from '../../Api';\nimport '../styles/BrandDetails.css';\nimport '../styles/MotorcycleCard.css'; // Ensure MotorcycleCard styles are imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrandDetails = () => {\n  _s();\n  const {\n    brandId\n  } = useParams();\n  const [bikes, setBikes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [brandName, setBrandName] = useState('');\n  useEffect(() => {\n    const fetchBrandBikes = async () => {\n      try {\n        // Assuming your API has an endpoint like /api/bikes/brand/:brandId\n        const data = await getData(`/api/bikes/brand/${brandId}`);\n        setBikes(data);\n        // Assuming the first bike in the list has the brand name, or you might need a separate endpoint\n        if (data.length > 0) {\n          setBrandName(data[0].brand);\n        } else {\n          // Handle case where no bikes are found for the brand\n          setBrandName(brandId.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())); // Basic formatting if no data\n        }\n        setLoading(false);\n      } catch (err) {\n        setError(err);\n        setLoading(false);\n      }\n    };\n    fetchBrandBikes();\n  }, [brandId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error loading bikes for \", brandId, \": \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"brand-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [brandName || 'Brand', \" Motorcycles\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), bikes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No motorcycles found for this brand.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand-bikes-list\",\n      children: bikes.map(bike => /*#__PURE__*/_jsxDEV(MotorcycleCard, {\n        bike: bike\n      }, bike._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(BrandDetails, \"PVm+NKdaVGmH/noaepGgf8WrsT0=\", false, function () {\n  return [useParams];\n});\n_c = BrandDetails;\nexport default BrandDetails;\nvar _c;\n$RefreshReg$(_c, \"BrandDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","MotorcycleCard","getData","jsxDEV","_jsxDEV","BrandDetails","_s","brandId","bikes","setBikes","loading","setLoading","error","setError","brandName","setBrandName","fetchBrandBikes","data","length","brand","replace","l","toUpperCase","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","bike","_id","_c","$RefreshReg$"],"sources":["E:/PROJECT AREA/updated project/college-main/college-main/front/src/components/layout/BrandDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport MotorcycleCard from './MotorcycleCard';\r\nimport { getData } from '../../Api';\r\nimport '../styles/BrandDetails.css';\r\nimport '../styles/MotorcycleCard.css'; // Ensure MotorcycleCard styles are imported\r\n\r\nconst BrandDetails = () => {\r\n  const { brandId } = useParams();\r\n  const [bikes, setBikes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [brandName, setBrandName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchBrandBikes = async () => {\r\n      try {\r\n        // Assuming your API has an endpoint like /api/bikes/brand/:brandId\r\n        const data = await getData(`/api/bikes/brand/${brandId}`);\r\n        setBikes(data);\r\n        // Assuming the first bike in the list has the brand name, or you might need a separate endpoint\r\n        if (data.length > 0) {\r\n          setBrandName(data[0].brand);\r\n        } else {\r\n           // Handle case where no bikes are found for the brand\r\n           setBrandName(brandId.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())); // Basic formatting if no data\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBrandBikes();\r\n  }, [brandId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading\"> {/* Replaced \"Loading bikes...\" with the loading animation HTML */}\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">Error loading bikes for {brandId}: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"brand-details-container\">\r\n      <h2>{brandName || 'Brand'} Motorcycles</h2>\r\n      {bikes.length === 0 ? (\r\n        <p>No motorcycles found for this brand.</p>\r\n      ) : (\r\n        <div className=\"brand-bikes-list\">\r\n          {bikes.map(bike => (\r\n            <MotorcycleCard key={bike._id} bike={bike} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}